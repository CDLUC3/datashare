<?xml version="1.0" encoding="UTF-8"?>
<!-- This file is part of the DITA Open Toolkit project hosted on 
     Sourceforge.net. See the accompanying license.txt file for 
     applicable licenses.-->
<!-- (c) Copyright IBM Corp. 2006 All Rights Reserved. -->
<project name="dita2eclipsehelp" default="dita2eclipsehelp">
    <property name="transtype" value="eclipsehelp"/>
    
    <import file="build_init.xml" />
    <import file="build_preprocess.xml" />
    <import file="build_general.xml" />

    <target name="dita2eclipsehelp"
            unless="noMap"
        depends="build-init, preprocess, copy-css, 
                     dita.topics.xhtml, dita.inner.topics.xhtml, dita.outer.topics.xhtml">
      <antcall target="dita.map.eclipse"></antcall>
    </target>

    <!--<target name="dita.map.eclipse"
        depends="dita.map.eclipse.init, dita.map.eclipse.toc, dita.map.eclipse.index, dita.map.eclipse.plugin, dita.out.map.eclipse.toc, dita.out.map.eclipse.index, dita.out.map.eclipse.plugin" />-->

  <target name="dita.map.eclipse"
    depends=" dita.map.eclipse.init, dita.map.eclipse.fragment.language.init, dita.map.eclipse.fragment.language.country.init, dita.map.eclipse.fragment.error">
    
  </target>
	
	<target name="dita.map.eclipse.init" if="eclipse.plugin"
	            depends="dita.map.eclipse.plugin.init">
	                <antcall target="dita.map.eclipse.generate.plugin"/>                     
	</target>

    <target name="dita.map.eclipse.plugin.init"
            description="Init properties for EclipseHelp">
        <basename property="dita.map.toc.root"
                  file="${dita.input.filename}"
                  suffix=".ditamap" />
        <condition property="args.eclipsehelp.toc" value="${dita.map.toc.root}">
            <not>
                <isset property="args.eclipsehelp.toc" />
            </not>
        </condition>
        <condition property="out.ext" value=".html">
            <not>
                <isset property="out.ext" />
            </not>
        </condition>
        <condition property="noPlugin">
            <equals arg1="${dita.eclipse.plugin}" arg2="no" />
        </condition>
      <condition property="eclipse.fragment.language">
        <and>
          <isset property="args.eclipsehelp.language" />
          <not>
            <isset property="args.eclipsehelp.country" />
          </not>
        </and>
      </condition>
      <condition property="eclipse.fragment.country">
        <and>
          <isset property="args.eclipsehelp.language" />
          <isset property="args.eclipsehelp.country" />
        </and>
      </condition>
      
      <condition property="eclipse.plugin">
        <not>
          <or>
            <isset property="args.eclipsehelp.language" />
            <isset property="args.eclipsehelp.country" />
            <and>
              <isset property="args.eclipsehelp.country" />
              <isset property="args.eclipsehelp.language" />
            </and>
          </or>
        </not>
      </condition>
      <condition property="eclipse.fragment.error">
        <and>
          <isset property="args.eclipsehelp.country" />
          <not>
            <isset property="args.eclipsehelp.language" />
          </not>
        </and>
      </condition>
    </target>

    <target name="dita.map.eclipse.toc" unless="noMap"
            depends="dita.map.eclipse.plugin.init" if="old.transform"
            description="Build EclipseHelp TOC file">
        <xslt processor="trax"
              basedir="${dita.temp.dir}"
              destdir="${output.dir}"
              includes="${fullditamaplist} ${chunkedditamaplist}"
              extension=".xml"
              classpathref="dost.class.path"
              style="${dita.script.dir}${file.separator}map2eclipse.xsl">
            <param name="DITAEXT" expression="${dita.ext}" if="dita.ext" />
            <param name="OUTEXT" expression="${out.ext}" if="out.ext" />
            <param name="WORKDIR" expression="${workdir}" if="workdir"/>
        </xslt>
    </target>
    
    <target name="dita.out.map.eclipse.toc" unless="noMap"
        depends="dita.map.eclipse.plugin.init" if="inner.transform"
        description="Build EclipseHelp TOC file">
        <xslt processor="trax"
            basedir="${dita.temp.dir}"
            destdir="${output.dir}"
            includes="${fullditamaplist} ${chunkedditamaplist}"
            classpathref="dost.class.path"
            style="${dita.script.dir}${file.separator}map2eclipse.xsl">
            <param name="DITAEXT" expression="${dita.ext}" if="dita.ext" />
            <param name="OUTEXT" expression="${out.ext}" if="out.ext" />
            <param name="WORKDIR" expression="${workdir}" if="workdir"/>
            <mapper type="regexp" 
                from="^(${tempdirToinputmapdir.relative.value})(.*?)(\.ditamap)$$" 
                to="\2\.xml"/>
        </xslt>
    </target>
    
    <target name="dita.map.eclipse.index" unless="noMap"
            depends="dita.map.eclipse.plugin.init" if="old.transform"
            description="Build Eclipse Help index file">
        <pipeline message="Extract index term."
            module="IndexTermExtract"
            basedir="${basedir}"
            tempdir="${dita.temp.dir}"
            inputmap="${user.input.file}"
            extparam="output=${output.dir}${file.separator}${user.input.file};targetext=${out.ext};indextype=eclipsehelp;${index.ext.param.encoding}" />
    </target>
    
    <target name="dita.out.map.eclipse.index" unless="noMap"
        depends="dita.map.eclipse.plugin.init" if="inner.transform"
        description="Build Eclipse Help index file">
        <pipeline message="Extract index term."
            module="IndexTermExtract"
            basedir="${basedir}"
            tempdir="${dita.temp.dir}"
            inputmap="${user.input.file}"
            extparam="output=${output.dir}${file.separator}index.xml;targetext=${out.ext};indextype=eclipsehelp;${index.ext.param.encoding}" />
    </target>

    <target name="dita.map.eclipse.plugin"
            unless="noPlugin"
            depends="dita.map.eclipse.plugin.init" if="old.transform"
            description="Build Eclipsehelp plugin file">
        <xslt processor="trax"
              in="${dita.temp.dir}${file.separator}${user.input.file}"
              out="${dita.map.output.dir}${file.separator}plugin.xml"
              classpathref="dost.class.path"
              style="${dita.script.dir}${file.separator}map2plugin.xsl">
            <param name="TOCROOT" expression="${args.eclipsehelp.toc}" />
            <param name="version"
                   expression="${args.eclipse.version}"
                   if="args.eclipse.version" />
            <param name="provider"
                   expression="${args.eclipse.provider}"
                   if="args.eclipse.provider" />
        </xslt>
    </target>
    
    <target name="dita.out.map.eclipse.plugin"
        unless="noPlugin"
        depends="dita.map.eclipse.plugin.init" if="inner.transform"
        description="Build Eclipsehelp plugin file">
        <xslt processor="trax"
            in="${dita.temp.dir}${file.separator}${user.input.file}"
            out="${output.dir}${file.separator}plugin.xml"
            classpathref="dost.class.path"
            style="${dita.script.dir}${file.separator}map2plugin.xsl">
            <param name="TOCROOT" expression="${args.eclipsehelp.toc}" />
            <param name="version"
                expression="${args.eclipse.version}"
                if="args.eclipse.version" />
            <param name="provider"
                expression="${args.eclipse.provider}"
                if="args.eclipse.provider" />
        </xslt>
    </target>
  
  <!-- New support for creating Eclipse fragments based on the similar map used to create a plug-in -->
  
  
  
  <target name="dita.map.eclipse.manifest.file"
    unless="noPlugin"
    depends="dita.map.eclipse.plugin.init" if="old.transform"
    description="Build Eclipsehelp manifest.mf file">
    <xslt processor="trax"
      in="${dita.temp.dir}${file.separator}${user.input.file}"
      out="${dita.map.output.dir}${file.separator}meta-inf${file.separator}Manifest.mf"
      classpathref="dost.class.path"
      style="${dita.script.dir}${file.separator}map2plugin.xsl">
      <param name="version"
        expression="${args.eclipse.version}"
        if="args.eclipse.version" />
      <param name="provider"
        expression="${args.eclipse.provider}"
        if="args.eclipse.provider" />
      <param name="plugin"
        expression="${eclipse.plugin}" />
      <param name="fragment.country" 
        expression="${args.eclipsehelp.country}" 
        if="eclipse.fragment.country"/>
      <param name="fragment.lang" 
        expression="${args.eclipsehelp.language}" 
        if="args.eclipsehelp.language"/>
      <outputproperty value="text" name="method"/>
      <param name="dita.plugin.output" 
        expression="dita.eclipse.manifest"/>                
    </xslt>
  </target>
  
  <target name="dita.out.map.eclipse.manifest.file"
    unless="noPlugin"
    depends="dita.map.eclipse.plugin.init" if="inner.transform"
    description="Build Eclipsehelp manifest.mf file">
    <xslt processor="trax"
      in="${dita.temp.dir}${file.separator}${user.input.file}"
      out="${dita.map.output.dir}${file.separator}meta-inf${file.separator}Manifest.mf"
      classpathref="dost.class.path"
      style="${dita.script.dir}${file.separator}map2plugin.xsl">
      <param name="version"
        expression="${args.eclipse.version}"
        if="args.eclipse.version" />
      <param name="provider"
        expression="${args.eclipse.provider}"
        if="args.eclipse.provider" />
      <param name="plugin"
        expression="${eclipse.plugin}" />
      <param name="fragment.country" 
        expression="${args.eclipsehelp.country}" 
        if="eclipse.fragment.country"/>
      <param name="fragment.lang" 
        expression="${args.eclipsehelp.language}" 
        if="args.eclipsehelp.language"/>
      <outputproperty value="text" name="method"/>
      <param name="dita.plugin.output" 
        expression="dita.eclipse.manifest"/>                
    </xslt>
  </target>
  
  
  <target name="dita.map.eclipse.plugin.properties"
    unless="noPlugin"
    depends="dita.map.eclipse.plugin.init" if="old.transform"
    description="Create eclipse plugin.properties file">
    <xslt processor="trax"
      in="${dita.temp.dir}${file.separator}${user.input.file}"
      out="${output.dir}${file.separator}plugin.properties"
      classpathref="dost.class.path"
      style="${dita.script.dir}${file.separator}map2plugin.xsl">
      <outputproperty value="text" name="method"/>
      <param name="dita.plugin.output" expression="dita.eclipse.properties"/>
    </xslt>
  </target>
  
  <target name="dita.out.map.eclipse.plugin.properties"
    unless="noPlugin"
    depends="dita.map.eclipse.plugin.init" if="inner.transform"
    description="Create eclipse plugin.properties file">
    <xslt processor="trax"
      in="${dita.temp.dir}${file.separator}${user.input.file}"
      out="${output.dir}${file.separator}plugin.properties"
      classpathref="dost.class.path"
      style="${dita.script.dir}${file.separator}map2plugin.xsl">
      <outputproperty value="text" name="method"/>
      <param name="dita.plugin.output" expression="dita.eclipse.properties"/>
    </xslt>
  </target>
  
  <target name="dita.map.eclipse.fragment.language.init" if="eclipse.fragment.language"
    depends="dita.map.eclipse.plugin.init">
    <property name="fragment.dirname.init" value="nl" />
    <property name="fragment.dirname" value="${fragment.dirname.init}${file.separator}${args.eclipsehelp.language}"/>
    <property name="fragment.property.name" value="${args.eclipsehelp.language}"/>
    <antcall target="dita.map.eclipse.genetrate.fragment"/>
  </target>
  
  <target name="dita.map.eclipse.fragment.language.country.init" if="eclipse.fragment.country"
    depends="dita.map.eclipse.plugin.init">
    <property name="fragment.dirname.init" value="nl" />
    <property name="fragment.dirname" value="${fragment.dirname.init}${file.separator}${args.eclipsehelp.language}${file.separator}${args.eclipsehelp.country}"/>
    <property name="fragment.property.name" value="${args.eclipsehelp.language}_${args.eclipsehelp.country}"/>
    <antcall target="dita.map.eclipse.genetrate.fragment"/>
  </target>
	
	<target name="dita.map.eclipse.fragment.error" if="eclipse.fragment.error"
	                depends="dita.map.eclipse.plugin.init">
	            <echo message="The Eclipse Fragment property args.eclipsehelp.language was not set. "/>
	</target>
  
  <target name="dita.map.eclipse.fragment.move.files"
    if="old.transform">
    <defaultexcludes add="**/meta-inf/**"/>
    <defaultexcludes add="**/nl/**"/>
    <move todir="${dita.map.output.dir}${file.separator}${fragment.dirname}" includeemptydirs="yes">
      <fileset dir="${dita.map.output.dir}" defaultexcludes="yes">
        <exclude name="*.xml"/>
        <exclude name="*.properties"/>
        <exclude name="*.list"/>
      </fileset>
    </move>     
  </target>
  
  <target name="dita.out.map.eclipse.fragment.move.files"
    if="inner.transform">
    <defaultexcludes add="**/meta-inf/**"/>
    <defaultexcludes add="**/nl/**"/>
    <move todir="${output.dir}${file.separator}${fragment.dirname}" includeemptydirs="yes">
      <fileset dir="${output.dir}" defaultexcludes="yes">
        <exclude name="*.xml"/>
        <exclude name="*.properties"/>
        <exclude name="*.list"/>
      </fileset>
    </move>     
  </target>
  
  <!--<target name="dita.map.eclipse"
    depends="dita.map.eclipse.init, 
    dita.map.eclipse.toc, 
    dita.map.eclipse.index, 
    dita.map.eclipse.plugin, 
    dita.out.map.eclipse.toc, 
    dita.out.map.eclipse.index, 
    dita.out.map.eclipse.plugin" />
  -->
  
  <target name="dita.map.eclipse.generate.plugin" 
    depends="dita.map.eclipse.toc, 
    dita.map.eclipse.index,
    dita.map.eclipse.plugin,
    dita.map.eclipse.plugin.properties, 
    dita.map.eclipse.manifest.file,
    dita.out.map.eclipse.plugin.properties, 
    dita.out.map.eclipse.manifest.file,
    dita.out.map.eclipse.toc, 
    dita.out.map.eclipse.index, 
    dita.out.map.eclipse.plugin" 
    >
    
  </target>
  

  
  <target name="dita.map.eclipse.genetrate.fragment" 
    depends="dita.map.eclipse.toc, 
    dita.map.eclipse.index, 
    dita.map.eclipse.plugin.properties, 
    dita.map.eclipse.manifest.file, 
    dita.out.map.eclipse.plugin.properties, 
    dita.out.map.eclipse.manifest.file, 
    dita.out.map.eclipse.toc, 
    dita.out.map.eclipse.index, 
    dita.out.map.eclipse.plugin,
    dita.map.eclipse.fragment.move.files,
    dita.out.map.eclipse.fragment.move.files">
    
  </target>

    <!-- depecrated: keep for back-compatibility, will be remvoed in a later release -->
    <target name="dita.topics.eclipse" depends="dita.topics.xhtml" />

</project>
